from typing import Optional, Any
import json
from pydantic import Field
from pydantic_core import PydanticUndefined
# CustomResponseModel은 app.langgraph.langchain.response 경로에 있습니다.
from ...langchain.response.base_response import CustomResponseModel
import logging

logger = logging.getLogger(__name__)

class TranslationResponse(CustomResponseModel):
    original_text: Optional[str] = Field(
        None,
        description="The original text that was translated.",
        example="Hello, world!"  # 이 예시 값은 get_json_example_structure에서 사용될 수 있음
    )
    translated_text: str = Field(
        ...,
        description="The translated text.",
        example="안녕하세요, 세계!" # 이 예시 값은 get_json_example_structure에서 사용될 수 있음
    )
    target_language: str = Field(
        ...,
        description="The target language of the translation.",
        example="Korean" # 이 예시 값은 get_json_example_structure에서 사용될 수 있음
    )
    detected_source_language: Optional[str] = Field(
        None,
        description="The detected source language of the original text.",
        example="English" # 이 예시 값은 get_json_example_structure에서 사용될 수 있음
    )
    confidence_score: Optional[float] = Field(
        None,
        description="The confidence score of the translation or language detection.",
        example=0.95 # 이 예시 값은 get_json_example_structure에서 사용될 수 있음
    )

    @classmethod
    def get_json_example_structure(cls) -> dict:
        """
        Generates a dictionary representing the JSON structure of TranslationResponse,
        using example values defined in Fields or type-based placeholders.
        """
        logger.debug(f"[{cls.__name__}] Generating JSON example structure.")
        example_fields = {}
        for field_name, field_info in cls.model_fields.items():
            # 1. Pydantic Field의 'example' 속성 사용 (field_info.examples는 리스트)
            if field_info.examples and isinstance(field_info.examples, list) and len(field_info.examples) > 0:
                example_fields[field_name] = field_info.examples[0]
            # 2. Pydantic Field의 'default' 값 사용 (None이 아니거나 PydanticUndefined가 아닐 때)
            elif field_info.default is not None and field_info.default is not PydanticUndefined:
                example_fields[field_name] = field_info.default
            # 3. _get_type_placeholder를 사용하여 타입 기반 플레이스홀더 생성
            else:
                example_fields[field_name] = cls._get_type_placeholder(field_info.annotation, field_name)
        
        if not example_fields:
            logger.warning(f"[{cls.__name__}] No fields found. Returning empty dict for structure.")
            # 빈 객체라도 JSON으로 표현 가능하므로 빈 dict 반환
            return {}
            
        return example_fields

    @classmethod
    def format_llm_instructions(cls, json_structure_example: dict) -> str: # 파라미터 이름 변경
        """
        Provides an example of the expected JSON output format for the LLM,
        using the provided JSON structure example.
        This is used by the ModelOutputParser to guide the LLM's response.
        The 'json_structure_example' argument is generated by this class's get_json_example_structure().
        """
        
        # LLM에게 전달할 전체 프롬프트/지침 구성
        # 이 instruction_prompt는 한국어 또는 다른 언어로 자유롭게 작성 가능합니다.
        # json_structure_example에는 필드별 예시 값이 이미 포함되어 있습니다.
        instruction_prompt = f"""다음은 당신이 따라야 하는 JSON 응답 형식의 예시입니다.
모든 필드 이름과 문자열 값은 따옴표로 묶어야 합니다.
필요한 경우 적절한 값을 채워주십시오. 선택적 필드는 값이 없으면 null 또는 생략될 수 있습니다 (다만, 아래 예시에는 모든 키가 포함되어 있습니다).

JSON 예시: 
```json
{json.dumps(json_structure_example, indent=2, ensure_ascii=False)}
```

상기 JSON 형식에 맞춰서 응답을 생성해주십시오.
"""
        return instruction_prompt
